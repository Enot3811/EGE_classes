"""
#14 7761

Сколько единиц содержится в двоичной записи значения выражения: 4**2020 + 2**2017 – 15?
"""

# Вычисляем
number = 4**2020 + 2**2017 - 15
# Так как спрашивают, сколько единиц в двоичной записи, то конвертируем в бинарную
bin_number = bin(number)[2:]  # Отбрасываем приставку 0b

# Метод строки count подсчитывает, сколько указанная подстрока встречается в строке
answer = bin_number.count('1')
print(answer)




"""
#14 9367
Значение арифметического выражения: 9**8 + 3**5 – 9 – записали в системе счисления с основанием 3.
Сколько цифр «2» содержится в этой записи?
"""

number = 9**8 + 3**5 - 9

# Перевод в любую систему счистелния можно сделать с помощью многократного деления
# На бумаге мы это делаем в столбик. Здесь можем просить python делить за нас

# Будем накапливать ответ в строке
converted_number = ''

# Деление происходит до тех пор, пока число ещё возможно поделить.
# В конце концов оно просто превратится в ноль
while number != 0:
    # Берём остаток от деления на 3 и добавляем к накопительной строке
    converted_number += str(number % 3)
    # Делим число, чтобы на следующей итерации продолжать уже с уменьшенным числом
    number //= 3

# Полученное число мы обычно записывали задом наперёд.
converted_number = converted_number[::-1]

print(converted_number.count('2'))
