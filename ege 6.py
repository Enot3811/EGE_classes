from turtle import *

"""
#6 47407
Черепахе был дан для исполнения следующий алгоритм:
Повтори 4 [Вперёд 8 Направо 90]
Повтори 3 [Вперёд 12 Направо 120]

Определите, сколько точек с целочисленными координатами будут находиться внутри области,
ограниченной линией, заданной данным алгоритмом:Повтори 4 [Вперёд 8 Направо 90]
и находиться вне области, ограниченной линией,
заданной данным алгоритмом: Повтори 3 [Вперёд 12 Направо 120].
Точки на линии учитывать не следует.
"""

# Настраиваем цвет границы и заливки
color('black', 'red')
# Задаём большой масштаб, чтобы потом корректно посчитать точки
# Далее эта переменная будет использоваться во всех операциях,
# связанными с изменением координат
m = 1000
# Настраиваем скорость черепахи (0 - отключает анимацию)
speed(0)

# Начинаем заливку
begin_fill()

# Изначально черепаха смотрит вдоль оси х, но в задаче она смотрит вдоль у
# Поэтому повернём её так, как сказано в задаче
left(90)

# Повторяем алгоритм из задачи
for i in range(4):
    forward(8 * m)
    right(90)
# Когда вернулись в исходную точку, заканчиваем заливку
end_fill()


# Перенастраиваем цвета, чтобы рисовать другую фигуру
# Синяя заливка замажет красную
color('black', 'blue')
# Повторяем то же самое для второй фигуры
begin_fill()
for i in range(3):
    forward(12 * m)
    right(120)
end_fill()

# Берём текущий холст с фигурами
# (Думаю, здесь не стоит сильно вдаваться в подробности)
canvas = getcanvas()

# Считаем точки в count
count = 0

# Перебираем всё множество точек, в котором находятся фигуры
# Можно расчитать более точно диапазон, но в этом нет большого смысла
# Проще просто взять такой range, в котором уж точно поместятся нарисованные фигуры
for y in range(-100 * m, 100 * m, m):
    for x in range(-100 * m, 100 * m, m):

        # Метод find_overlapping возвращает список точек,
        # которые совпадают у нарисованных на холсте фигур и у заданного прямоугольника
        # Но так как заданный прямогольник вырожден в 1 точку,
        # то вернётся либо пустой список, если точка не принадлежит фигурам,
        # либо список с одной точкой заданной точкой
        item = canvas.find_overlapping(x, y, x, y)

        # Сама точка представлена кодом цвета, в который она покрашена
        # У красного в данном случае код - 5
        if len(item) == 1 and item[0] == 5:
            # То есть получается если точка принадлежит фигуре и она красная, то считаем её
            count += 1
print(count)
done()
